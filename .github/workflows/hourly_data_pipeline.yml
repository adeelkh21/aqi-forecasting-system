name: Hourly Data Pipeline (Every 2 Hours)

on:
  schedule:
    # Run every 2 hours
    - cron: '0 */2 * * *'
  workflow_dispatch: # Allow manual trigger

jobs:
  data-pipeline:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.9'
        
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        
    - name: Create data directories
      run: |
        mkdir -p data_repositories/hourly_data/raw
        mkdir -p data_repositories/hourly_data/processed
        mkdir -p data_repositories/historical_data/raw
        mkdir -p data_repositories/historical_data/processed
        mkdir -p data_repositories/features
        
    - name: Set up environment variables
      run: |
        echo "OPENWEATHER_API_KEY=${{ secrets.OPENWEATHER_API_KEY }}" >> $GITHUB_ENV
        echo "METEOSTAT_API_KEY=${{ secrets.METEOSTAT_API_KEY }}" >> $GITHUB_ENV
        
    - name: Run data collection
      run: |
        echo "🔄 Starting data collection (past 2 hours)..."
        python 01_data_collection.py
        echo "✅ Data collection completed"
        
    - name: Run data preprocessing
      run: |
        echo "🔄 Starting data preprocessing..."
        python 02_data_preprocessing.py
        echo "✅ Data preprocessing completed"
        
    - name: Run feature selection
      run: |
        echo "🔄 Starting feature selection..."
        python 03_feature_selection.py
        echo "✅ Feature selection completed"
        
    - name: Commit and push updated data
      run: |
        git config --local user.email "action@github.com"
        git config --local user.name "GitHub Action"
        
        # Add all data files
        git add data_repositories/
        
        # Check if there are changes to commit
        if git diff --staged --quiet; then
          echo "No changes to commit"
        else
          git commit -m "🤖 Auto-update: 2-hour data pipeline $(date -u +'%Y-%m-%d %H:%M:%S UTC')"
          git push
          echo "✅ Data committed and pushed"
        fi
        
    - name: Upload data artifacts
      uses: actions/upload-artifact@v3
      with:
        name: data-pipeline-artifacts
        path: |
          data_repositories/
        retention-days: 7
        
    - name: Pipeline summary
      run: |
        echo "🎉 2-Hour Data Pipeline Completed Successfully!"
        echo "📊 Data collected and processed at: $(date -u)"
        echo "📁 Data saved to: data_repositories/"
        echo "🔄 Next run scheduled for: $(date -u -d '+2 hours')"
